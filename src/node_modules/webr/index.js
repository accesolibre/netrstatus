/**
 * Web resolution
 * @module webr
 */
var request = require('request')
var config = require('config')

/**
 * generate statistics to sent back to the API.
 * @param {Object} res - response from the HTTP request.
 * @returns {Object} stats to be sent to the API.
 */
function genStats (res) {
  return {
    statusCode: res.statusCode,
    proxy: res.request.proxy,
    port: res.request.port,
    host: res.request.host,
    httpVersion: res.httpVersion,
    headers: res.headers
  }
}

/**
 * get a website and say if it loaded or not
 * @param {Object} opts -
 * @param {module:web-resolution~WebCallback} callback -
 * @returns {void}
 */
function get (opts, callback) {
  var local = {}

  local.method = 'GET'
  local.uri = opts.url || opts.uri
  local.timeout = opts.timeout || config.webr.timeout
  local.strictSSL = true

  request(local, function resolution (err, res, body) {
    if (!err && res.statusCode === opts.statusCode) {
      return callback(null, true, genStats(res))
    }

    if (err) {
      return callback(err)
    }

    return callback(null, false, genStats(res))
  })
}
module.exports = get

/**
 * @callback module:web-resolution~WebCallback
 * @param {Error} err - if there was any error on the request.
 * @param {Boolean} passed - if uri gave the right status code.
 * @param {Object} stats - statistics to be sent back to the API.
 */
